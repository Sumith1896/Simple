//////////////////////////////////////////////////////////////////////////
//
//	Filename: 	InputInterp.h
//
//	Author:		Nicholas Legg
//
//	Purpose:	Controls all the players in the game
//
//////////////////////////////////////////////////////////////////////////
#pragma once
#include "Helpers.h"
#include "DirectInput.h"

class CACHE_ALIGN InputInterp  
{
private:

	static	InputInterp *m_pInstance;			//instance to the singleton	
	DirectInput		*m_pDirectInput;

	InputInterp(){};
	InputInterp(const InputInterp &a){};
	InputInterp &operator=(const InputInterp &a){};

public:

	//	~InputInterp: Destructor
	~InputInterp(){};

	//////////////////////////////////////////////////////////////////////////
	// 
	//	Function: 		DeleteInstance
	//
	//	Purpose:		Delete the instance of the class, and set the pointer to NULL
	//
	//////////////////////////////////////////////////////////////////////////
	static void DeleteInstance();

	//////////////////////////////////////////////////////////////////////////
	// 
	//	Function: 		GetInstance
	//
	//	Purpose:		Creates the first instance of this class and returns it's address.
	//
	//////////////////////////////////////////////////////////////////////////
	static InputInterp *GetInstance();

	//////////////////////////////////////////////////////////////////////////
	// 
	//	Function: 		Init
	//
	//	Purpose:		Initializes the player manager
	//
	//////////////////////////////////////////////////////////////////////////
	void Init(HWND hWnd, HINSTANCE hInstance);

	//////////////////////////////////////////////////////////////////////////
	// 
	//	Function: 		Update
	//
	//	Purpose:		called every frame to check for inputs 
	//
	//////////////////////////////////////////////////////////////////////////
	void Update();

		//////////////////////////////////////////////////////////////////////////
	// 
	//	Function: 		MainGameFirstPerson
	//
	//	Purpose:		input update for the main game state 
	//
	//////////////////////////////////////////////////////////////////////////
	void MainGameFirstPerson();
};